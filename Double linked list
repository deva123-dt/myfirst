class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None

class DoublyLinkedList:
    def __init__(self):
        self.head = None

    def insert_end(self, data):
        new = Node(data)
        if self.head is None:
            self.head = new
            return
        temp = self.head
        while temp.next:
            temp = temp.next
        temp.next = new
        new.prev = temp

    def insert_begin(self, data):
        new = Node(data)
        if self.head is None:
            self.head = new
            return
        new.next = self.head
        self.head.prev = new
        self.head = new

    def display_forward(self):
        temp = self.head
        while temp:
            print(temp.data, end=" <---> ")
            temp = temp.next
        print("None")

    def display_backward(self):
        temp = self.head
        if not temp:
            print("None")
            return
        while temp.next: 
            temp = temp.next
        while temp:
            print(temp.data, end=" <---> ")
            temp = temp.prev
        print("None")



dli = DoublyLinkedList()
dli.insert_end(10)
dli.insert_end(20)
dli.insert_end(30)
dli.insert_begin(5)

print("Forward Traversal:")
dli.display_forward()

print("Backward Traversal:")
dli.display_backward()
